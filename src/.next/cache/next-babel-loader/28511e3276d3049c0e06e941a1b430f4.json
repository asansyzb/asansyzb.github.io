{"ast":null,"code":"var __jsx = React.createElement;\nimport App from \"next/app\";\nimport React from \"react\";\nimport ThemeProvider from \"@material-ui/styles/ThemeProvider\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport theme from \"styles/theme\";\nimport dynamic from \"next/dynamic\";\nconst Layout = dynamic(() => import(\"components/Layout\"), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak(\"components/Layout\")],\n    modules: [\"components/Layout\"]\n  }\n});\n\nclass AppWrapper extends App {\n  static async getInitialProps({\n    Component,\n    ctx\n  }) {\n    const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {}; //Anything returned here can be accessed by the client\n\n    return {\n      pageProps: pageProps\n    };\n  }\n\n  render() {\n    //pageProps that were returned  from 'getInitialProps' are stored in the props i.e. pageprops\n    const {\n      Component,\n      pageProps,\n      store\n    } = this.props;\n    return __jsx(ThemeProvider, {\n      theme: theme\n    }, __jsx(CssBaseline, null), __jsx(Layout, null, __jsx(Component, pageProps)));\n  }\n\n} //makeStore function that returns a new store for every request\n//withRedux wrapper that passes the store to the App Component\n\n\nexport default AppWrapper;","map":null,"metadata":{},"sourceType":"module"}